AWSTemplateFormatVersion: 2010-09-09

Description: |
  Udagram CloudFormation Network Deployment.
  - VPC
  - Subnets
  - Internet Gateway
  - NAT Gateway
  - EIP

Parameters:
  ENVIRONMENTNAME:
    Description: An environment name that will be prefixed to resource names.
    Type: String

  VPCCIDR:
    Description: Enter the CIDR for the the VPC. Default is 10.0.0.0/16.
    Type: String
    Default: 10.0.0.0/16

  PUBSUBNET1CIDR:
    Description: Enter the CIDR for the Public Subnet 1. Default is 10.0.1.0/24.
    Type: String
    Default: 10.0.1.0/24

  PUBSUBNET2CIDR:
    Description: Enter the CIDR for the Public Subnet 2. Default is 10.0.2.0/24.
    Type: String
    Default: 10.0.2.0/24

  PRIVSUBNET1CIDR:
    Description: Enter the CIDR for the Private Subnet 1. Default is 10.0.3.0/24.
    Type: String
    Default: 10.0.3.0/24

  PRIVSUBNET2CIDR:
    Description: Enter the CIDR for the Private Subnet 2. Default is 10.0.4.0/24.
    Type: String
    Default: 10.0.4.0/24

Resources:

  VPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: !Ref VPCCIDR
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags: 
        - 
          Key: Environment
          Value: !Ref ENVIRONMENTNAME
        -
          Key: Name
          Value: !Sub ${ENVIRONMENTNAME}-VPC
  
  IG:
    Type: AWS::EC2::InternetGateway
    Properties: 
      Tags: 
        - 
          Key: Environment
          Value: !Ref ENVIRONMENTNAME
        -
          Key: Name
          Value: !Sub ${ENVIRONMENTNAME}-IG

  IGA:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: !Ref IG
      VpcId: !Ref VPC

  EIP1:
    Type: AWS::EC2::EIP
    Properties: 
      Domain: vpc
      Tags: 
        - 
          Key: Environment
          Value: !Ref ENVIRONMENTNAME
        -
          Key: Name
          Value: !Sub ${ENVIRONMENTNAME}-EIP1

  EIP2:
    Type: AWS::EC2::EIP
    Properties: 
      Domain: vpc
      Tags: 
        - 
          Key: Environment
          Value: !Ref ENVIRONMENTNAME
        -
          Key: Name
          Value: !Sub ${ENVIRONMENTNAME}-EIP2

  PUBSUBNET1:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PUBSUBNET1CIDR
      MapPublicIpOnLaunch: true
      Tags: 
        - 
          Key: Environment
          Value: !Ref ENVIRONMENTNAME
        -
          Key: Name
          Value: !Sub ${ENVIRONMENTNAME}-PUBSUBNET1
      VpcId: !Ref VPC

  PUBSUBNET2:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      CidrBlock: !Ref PUBSUBNET2CIDR
      MapPublicIpOnLaunch: true
      Tags: 
        - 
          Key: Environment
          Value: !Ref ENVIRONMENTNAME
        -
          Key: Name
          Value: !Sub ${ENVIRONMENTNAME}-PUBSUBNET2
      VpcId: !Ref VPC

  PRIVSUBNET1:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PRIVSUBNET1CIDR
      MapPublicIpOnLaunch: false
      Tags: 
        - 
          Key: Environment
          Value: !Ref ENVIRONMENTNAME
        -
          Key: Name
          Value: !Sub ${ENVIRONMENTNAME}-PRIVSUBNET1
      VpcId: !Ref VPC

  PRIVSUBNET2:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      CidrBlock: !Ref PRIVSUBNET2CIDR
      MapPublicIpOnLaunch: false
      Tags: 
        - Key: Environment
          Value: !Ref ENVIRONMENTNAME
        -
          Key: Name
          Value: !Sub ${ENVIRONMENTNAME}-PRIVSUBNET2
      VpcId: !Ref VPC

  NATGW1:
    Type: AWS::EC2::NatGateway
    Properties: 
      AllocationId: !GetAtt EIP1.AllocationId
      SubnetId: !Ref PUBSUBNET1
      Tags: 
        - Key: Environment
          Value: !Ref ENVIRONMENTNAME
        -
          Key: Name
          Value: !Sub ${ENVIRONMENTNAME}-NATGW1

  NATGW2:
    Type: AWS::EC2::NatGateway
    Properties: 
      AllocationId: !GetAtt EIP2.AllocationId
      SubnetId: !Ref PUBSUBNET2
      Tags: 
        - Key: Environment
          Value: !Ref ENVIRONMENTNAME
        -
          Key: Name
          Value: !Sub ${ENVIRONMENTNAME}-NATGW2

  PUBROUTETABLE:
    Type: AWS::EC2::RouteTable
    Properties: 
      Tags: 
        - Key: Environment
          Value: !Ref ENVIRONMENTNAME
        -
          Key: Name
          Value: !Sub ${ENVIRONMENTNAME}-PUBROUTETABLE
      VpcId: !Ref VPC

  PUBINTERNETROUTE:
    Type: AWS::EC2::Route
    Properties: 
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IG
      RouteTableId: !Ref PUBROUTETABLE

  PUBROUTEASSOCIATION1:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
          RouteTableId: !Ref PUBROUTETABLE
          SubnetId: !Ref PUBSUBNET1

  PUBROUTEASSOCIATION2:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
          RouteTableId: !Ref PUBROUTETABLE
          SubnetId: !Ref PUBSUBNET2

  PRIVROUTETABLE1:
    Type: AWS::EC2::RouteTable
    Properties: 
      Tags: 
        - Key: Environment
          Value: !Ref ENVIRONMENTNAME
        -
          Key: Name
          Value: !Sub ${ENVIRONMENTNAME}-PRIVROUTETABLE1
      VpcId: !Ref VPC

  PRIVROUTETABLE2:
    Type: AWS::EC2::RouteTable
    Properties: 
      Tags: 
        - Key: Environment
          Value: !Ref ENVIRONMENTNAME
        -
          Key: Name
          Value: !Sub ${ENVIRONMENTNAME}-PRIVROUTETABLE2
      VpcId: !Ref VPC

  PRIVINTERNETROUTE1:
    Type: AWS::EC2::Route
    Properties: 
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGW1
      RouteTableId: !Ref PRIVROUTETABLE1

  PRIVINTERNETROUTE2:
    Type: AWS::EC2::Route
    Properties: 
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGW2
      RouteTableId: !Ref PRIVROUTETABLE2

  PRIVROUTEASSOCIATION1:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
          RouteTableId: !Ref PRIVROUTETABLE1
          SubnetId: !Ref PRIVSUBNET1

  PRIVROUTEASSOCIATION2:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
          RouteTableId: !Ref PRIVROUTETABLE2
          SubnetId: !Ref PRIVSUBNET2

Outputs:
  StackVPC:
    Description: The ID of the VPC
    Value: !Ref VPC
    Export:
      Name: !Sub "${ENVIRONMENTNAME}-VPC"

  StackPUBSUBNET1:
    Description: The ID of the Public Subnet 1
    Value: !Ref PUBSUBNET1
    Export:
      Name: !Sub "${ENVIRONMENTNAME}-PUBSUBNET1"

  StackPUBSUBNET2:
    Description: The ID of the Public Subnet 2
    Value: !Ref PUBSUBNET2
    Export:
      Name: !Sub "${ENVIRONMENTNAME}-PUBSUBNET2"

  StackPRIVSUBNET1:
    Description: The ID of the Private Subnet 1
    Value: !Ref PRIVSUBNET1
    Export:
      Name: !Sub "${ENVIRONMENTNAME}-PRIVSUBNET1"

  StackPRIVSUBNET2:
    Description: The ID of the Private Subnet 2
    Value: !Ref PRIVSUBNET2
    Export:
      Name: !Sub "${ENVIRONMENTNAME}-PRIVSUBNET2"

  StackPRIVSUBNETS:
    Description: A list of the Private Subnets
    Value: !Join [ ",", [ !Ref PRIVSUBNET1, !Ref PRIVSUBNET2 ]]
    Export:
      Name: !Sub "${ENVIRONMENTNAME}-PRIVSUBNETS"

  StackPUBSUBNETS:
    Description: A list of the Private Subnets
    Value: !Join [ ",", [ !Ref PUBSUBNET1, !Ref PUBSUBNET2 ]]
    Export:
      Name: !Sub "${ENVIRONMENTNAME}-PUBSUBNETS"